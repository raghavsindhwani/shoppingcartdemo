{"version":3,"sources":["util.js","components/Login.js","components/Cart.js","components/Navbar.js","components/Products.js","components/Filter.js","containers/ProductContainer.js","containers/ShowPage.js","App.js","serviceWorker.js","index.js"],"names":["data","a","axios","get","name","then","response","resp","username","password","Error","catch","err","Promise","reject","res","Login","handleInputChange","event","setState","target","value","submitLogin","preventDefault","history","props","login","state","console","log","push","errorMessage","className","onSubmit","this","type","onChange","React","Component","withRouter","Cart","cartItems","length","style","marginLeft","map","item","key","id","title","float","color","onClick","e","handleRemoveFromCart","count","price","final_price","reduce","c","NavBarView","to","searchHandler","Products","productItems","products","product","src","image","alt","discount","brand","colour","handleAddToCart","Filter","BrandSelectMapper","filters","filter","values","ColorSelectMapper","maxPriceSelectMapper","displayValue","minPriceSelectMapper","handleBrandChange","handleColorChange","minPrice","handleMinPriceChange","maxPrice","handleMaxPriceChange","filterSubmitHandler","ProductContainer","ShowPage","productAlreadyInCart","forEach","clk","listProducts","filteredProducts","searchedValue","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ee7392fd.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nexport default async function login (data) {\n  const res = await axios.get(`https://xebiascart.herokuapp.com/users?username=${data.name}`)\n    .then(response => {\n      const resp = response.data[0];\n      if(resp.username === data.name && resp.password === data.password) {\n        return resp;\n      }\n      throw new Error('Authentication Failed');\n    })\n    .catch(err => Promise.reject('Authentication Failed!'));\n  return res;\n}\n","import React from 'react';\nimport login  from '../util';\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends React.Component{\n      constructor() {\n        super();\n        this.state = { name: '', password: '', errorMessage: '' };\n      }\n      \n      handleInputChange = (event) => \n                this.setState({[event.target.name]: event.target.value})\n      submitLogin = (event) => {\n        event.preventDefault();\n        const { history } = this.props;\n        login(this.state).catch(err => console.log(err))\n        .then(() => history.push('/product'))\n      }\n      render() {\n        \n         return (\n          <div className=\"container\">\n          <hr/>\n            <div className=\"col-sm-8 col-sm-offset-2\">\n              <div className=\"panel panel-primary\">\n                <div className=\"panel-heading\"><h3>Log in </h3></div>\n                <div className=\"panel-body\">\n                  <form onSubmit={this.submitLogin}>\n                    { this.state.errorMessage && <h3>{this.state.errorMessage}</h3> }\n                    <div className=\"form-group\">\n                      <label>Name:</label>\n                      <input type=\"text\" className=\"form-control\" \n                          name=\"name\" onChange={this.handleInputChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Password:</label>\n                      <input type=\"password\" className=\"form-control\" \n                          name=\"password\" onChange={this.handleInputChange}/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    }\n\nexport default withRouter(Login);","import React, { Component } from 'react';\n\nexport default class Cart extends Component {\n    render() {\n        const { cartItems } = this.props;\n        \n        return (\n            <div className=\"alert alert-info\">\n                {cartItems.length === 0\n                    ? \"Cart is empty\" :\n                    <div>You have {cartItems.length} items in the cart <hr /></div>\n                }\n                {cartItems.length > 0 &&\n                    <div>\n                        <ul style={{ marginLeft: -25 }}>\n                            {cartItems.map(item => (\n                                <li key={item.id}>\n                                    <b>{item.title}</b>\n                                    <button style={{ float: 'right' , color : 'black' }} \n                                        onClick={(e) => this.props.handleRemoveFromCart(e, item)}>submit</button>\n                                    <br />\n                                    {item.count} x {item.price.final_price}\n                                </li>))\n                            }\n                        </ul>\n\n                        <b>Sum: {cartItems.reduce((a, c) => (a + c.price.final_price * c.count), 0)}\n                        </b>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\n\nconst NavBarView = (props) => {\n    return (\n        <nav className=\"navbar-wrapper\">\n            <div className=\"navbar-left-side\">\n                <Link to=\"/product\">  <div className=\"products-link-wrapper\">Products</div></Link>\n            </div>\n            <div className=\"product-search-wrapper\">\n                <input type=\"text\" onChange={props.searchHandler}/>\n            </div>\n            <div className=\"navbar-right-side\">\n                <Link to=\"/cart\"> <div className=\"mycart-logo-wrapper\"> My Cart</div> </Link>\n            </div>\n        </nav>\n    )\n}\n\n\nexport default NavBarView;","import React, { Component } from 'react';\nimport '../styles/Products.css';\nexport default class Products extends Component {\n\n    render() {\n        const productItems = this.props.products.map(product => (\n        <div className=\"col-md-4\" key={product.id}>\n                <div className=\"gallery\">\n                        <img src={product.image} alt={product.title} />\n                        <div className=\"top-right\">{product.discount > 0 ? product.discount: null}</div>\n                        <div className=\"des\">{product.title}</div>\n                        <div>{product.brand}</div>\n                        <p>{product.colour.title}</p>                        \n                    <b>{product.price.final_price}</b>\n                    <hr/>\n                    <button className=\"btn btn-primary\" onClick={(e)=>this.props.handleAddToCart(e, product)}>Add to cart</button>\n                    \n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Filter extends Component {\n\n    constructor() {\n        super();\n        this.state = { filters:[]};\n    }\n    componentWillMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n        .then((response) => {\n            this.setState({ filters: response.data })\n        })\n    };\n\n\n   BrandSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'BRAND' ?\n\n                        filter.values.map((value) => <option key={value.title}>{value.value}</option>) : null\n                )\n\n            })\n        )\n    }\n    ColorSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'COLOUR' ?\n\n                        filter.values.map((value) => <option key={value.color}>{value.title}</option>) : null\n                )\n\n            })\n        )\n    }\n    maxPriceSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'PRICE' ?\n\n                        filter.values.map((value) => {\n                            return (\n                                value.key > 2000 || value.key === \"Max\" ?\n                                    <option key={value.key}>{value.displayValue}</option> : null)\n                        }) : null\n                )\n\n            })\n        )\n    }\n\n    minPriceSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'PRICE' ?\n\n                        filter.values.map((value) => {\n                            return (\n                                value.key < 2000 || value.key === \"Min\" ?\n                                    <option key={value.key}>{value.displayValue}</option> : null)\n                        }) : null\n                )\n\n            })\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <label>Brand\n                        <select className=\"form-control\" value = {this.props.brand} key='brands' onChange={this.props.handleBrandChange}>\n                            {this.BrandSelectMapper(this.state.filters)}\n                        </select>\n                        </label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <label>Color\n                        <select className=\"form-control\" value = {this.props.color} key='color' onChange={this.props.handleColorChange}>\n                            {this.ColorSelectMapper(this.state.filters)}\n                        </select>\n                        </label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <label>Min Price\n                        <select className=\"form-control\" value= {this.props.minPrice} key='min-price' onChange={this.props.handleMinPriceChange}>\n                            {this.minPriceSelectMapper(this.state.filters)}\n                        </select>\n                        </label>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <label>Max Price\n                        <select className=\"form-control\" value= {this.props.maxPrice} key='max-price' onChange={this.props.handleMaxPriceChange} >\n                            {this.maxPriceSelectMapper(this.state.filters)}\n                        </select>\n                        </label>\n                    </div>\n                        <div className=\"filter-submit-button-wrapper\" style={{ color: 'black' }}>\n                            <button className=\"filter-submit-button\" onClick={this.props.filterSubmitHandler} >Reset Filter</button>\n                        </div>\n                    </div>\n        )\n    }\n}\n","import React from 'react';\nimport Products from '../components/Products';\nimport Filter from '../components/Filter';\n\nconst ProductContainer = (props) => {\n    const { handleColorChange, handleBrandChange, handleMinPriceChange, handleMaxPriceChange, filterSubmitHandler, products, handleAddToCart}=props;\n    return (\n        <div className=\"col-md-9\">\n            <Filter\n              handleColorChange={handleColorChange} handleBrandChange={handleBrandChange}\n              handleMinPriceChange={handleMinPriceChange} handleMaxPriceChange={handleMaxPriceChange}\n              filterSubmitHandler={filterSubmitHandler} />\n            <hr />\n            <Products products={products} handleAddToCart={handleAddToCart} />\n        </div>\n    )\n};\n\nexport default ProductContainer;","import React, { Component } from 'react';\nimport Cart from '../components/Cart';\nimport Navbar from '../components/Navbar';\nimport ProductContainer from './ProductContainer';\nimport axios from 'axios';\n\nclass ShowPage extends Component {\n  constructor() {\n    super();\n    this.state = { color: '', brand: '', minPrice: 0, maxPrice: 0,cartItems: [], products: [], filteredProducts: [], errorMessage: '' };\n  }\n  componentWillMount() {\n\n    axios.get('https://xebiascart.herokuapp.com/products')\n      .catch(err => this.setState({\n        errorMessage: 'Unable to Fetch Products',\n      }))\n      .then(res => {\n        this.setState({ products: res.data});\n        this.listProducts();\n      }).catch(err => console.log(err));\n  }\n\n  handleRemoveFromCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(a => a.id !== product.id);\n      return { cartItems: cartItems };\n    })\n  }\n\n  handleAddToCart = (e, product) => {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n\n      cartItems.forEach(clk => {\n        if (clk.id === product.id) {\n          clk.count += 1;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      return { cartItems: cartItems };\n    });\n  }\n\n  listProducts = () => {\n    this.setState(state => {\n      if(state.brand !== '') {\n        const filtering = state.products.filter(a => a.brand === state.brand);\n        return { filteredProducts: filtering };\n      }\n      if(state.minPrice !== 0) {\n        const filtering = state.products.filter(a => a.price.final_price >= state.minPrice);\n        return { filteredProducts: filtering };\n      }\n      if(state.maxPrice !== 0) {\n        const filtering = state.products.filter(a => a.price.final_price <= state.maxPrice);\n        return { filteredProducts: filtering };\n      }\n      if (state.color !== '') {\n        const filtering = state.products.filter(a => a.colour.title === state.color);\n      return {filteredProducts: filtering};\n    }\n      return { filteredProducts: state.products };\n    });\n  }\n  filterSubmitHandler = () => {\n    this.setState({\n      color: '',\n      brand: '',\n      minPrice: 0,\n      maxPrice: 0,\n    });\n    this.listProducts();\n  }\n  handleColorChange = (e) => {\n    this.setState({ color: e.target.value });\n    this.listProducts();\n  }\n  handleBrandChange = (e) => {\n    this.setState({ brand: e.target.value });\n    this.listProducts();\n  }\n  handleMinPriceChange = (e) => {\n    this.setState({ minPrice: e.target.value});\n    this.listProducts();\n  }\n  handleMaxPriceChange = (e) => {\n    this.setState({ maxPrice: e.target.value});\n    this.listProducts();\n  }\n  searchHandler = (e) => {\n    e.preventDefault();\n    const searchedValue = e.target.value;\n    axios.get(`https://xebiascart.herokuapp.com/products?title=${searchedValue}`)\n        .catch((err) => console.log(\"Sorry no products are found\", err))\n        .then((response) => {\n            this.setState({ filteredProducts: response.data });\n    });\n    this.listProducts();\n  }\n\n\n  render() {\n    return (\n      <div>\n       { this.state.errorMessage && <h3>{this.state.errorMessage}</h3> }\n      <Navbar searchHandler={this.searchHandler} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <ProductContainer \n              handleAddToCart={this.handleAddToCart}\n              handleColorChange={this.handleColorChange}\n              handleBrandChange={this.handleBrandChange}\n              handleMinPriceChange={this.handleMinPriceChange}\n              handleMaxPriceChange={this.handleMaxPriceChange}\n              filterSubmitHandler={this.filterSubmitHandler}\n              products={this.state.filteredProducts}\n            />\n          <div className=\"col-md-3\">\n            <Cart cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />\n          </div>\n\n        </div>\n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default ShowPage;\n","import React from 'react';\nimport Login from './components/Login';\nimport ShowPage from './containers/ShowPage';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport Cart from './components/Cart'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/product\" component={ShowPage} />\n        <Route path=\"/cart\" component={Cart} />\n      \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}